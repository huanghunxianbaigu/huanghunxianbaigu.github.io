[{"title":"Hello World","date":"2019-06-20T16:00:00.000Z","path":"2019/06/21/Vue框架级请求/","text":"Vue 框架级请求vue-resource（停止更新） vue-resource作者推荐使用axios vue-resource在用法上和axios 相似度90+ vue2.0使用的基本上都是fetch / axios vue-resource *是有 *jsonp 的 vue-resource 如果在vue中使用，是挂载当前的实例（ 组件 ）的 $http 属性身上的 this.$http( options ) this.$htttp.get( ) this.$http.post( ) axios（第三方库） axios 是没有 jsonp 数据请求类型的 axios 是promise（ 异步 ） axios 会对请求的结果进行再一次封装（ 提高安全性 ） 案例： 123456&lt;div id=\"app\"&gt; &lt;button @click = \"getData\"&gt; get - mock - json &lt;/button&gt; &lt;button @click = \"get_be_data\"&gt; get - backend online- api &lt;/button&gt; &lt;button @click = \"get_myself_php_data\"&gt; get - myself - php -api &lt;/button&gt; &lt;button @click = \"postData\"&gt; post &lt;/button&gt;&lt;/div&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960new Vue(&#123; el: '#app', methods: &#123; getData () &#123; //进行get请求 // axios.get() -- $.get() // axios.post() ---$.post() // axios(options) -- $.ajax(options) // var p = axios(&#123; // url: './data/data.json' // &#125;) // console.log( p ) Promise对象 axios(&#123; url: './data/data.json', method: 'get',//默认就是get请求 &#125;) .then( res =&gt; console.log( res )) .catch( error =&gt; conosle.log( error )) &#125;, postData () &#123; // 进行post请求 &#125;, get_myself_php_data () &#123; axios(&#123; url: 'http://localhost/get.php', params: &#123; a: 1, b: 2 &#125; &#125;) .then( res =&gt; console.log( res )) .catch( error =&gt; console.log( error )) &#125;, get_be_data () &#123; // 跨域请求线上数据 - 卖座网 axios(&#123; url: 'https://m.maizuo.com/gateway', headers: &#123; 'X-Client-Info': '&#123;\"a\":\"3000\",\"ch\":\"1002\",\"v\":\"5.0.4\",\"e\":\"154549400038873748996477\"&#125;', 'X-Host': 'mall.film-ticket.film.list' &#125;, params: &#123; cityId: 330100, pageNum: 1, pageSize: 10, type: 1, k: 7675918 &#125; &#125;) .then( res =&gt; console.log( res )) .catch( error =&gt; console.log( error )) &#125; &#125;&#125;) fetch ( javascript 原生提供 ) fetch 要手动进行一次数据格式化，但是 axios 是内部惊醒了数据的格式化 fetch get 方法请求数据，参数要直接连接在 url 上 fetch 格式化数据 有三种处理方法 .json( ) 格式化 json 类型数据， 将 json 类型 string 转换成 json 对象 .text( ) 格式化文本 .blob( ) 格式化二进制数据 fetch 如果按照官网文档书写post请求， 有坑 ， 携带数据出现问题 fetch post处理 设置请求头 通过 new URLSearchPrams 来携带参数","excerpt":"Vue 框架级请求 vue-resource（停止更新） * vue-resource作者推荐使用axios * vue-resource在用法上和axios 相似度90+ * vue2.0使用的基本上都是fetch / axios * vue-resource *是有 *jsonp 的 * vue-resource 如果在vue中使用，是挂载当前的实例（ 组件 ）的 $http 属性身上的 * this.$http( options ) * this.$htttp.get( ) * this.$http.post( ) axios（第三方库） *"},{"title":"My-New-Post","date":"2019-06-19T16:00:00.000Z","path":"2019/06/20/My-New-Post/","text":"三阶段介绍重点： 纪律 笔记 做一个主动的人 阶段内容 学习目录的创建123456789三阶段 老师参考资料 1-Node.js 2-Vue.js 3-React.js 自己的 1-Node.js day01 day02 前端软件的安装​ Typora md文件的编辑器（ 安装没有要求 ） / 有道云 / 印象笔记 ​ git bash ​ Vs code 账号的注册 码云 github.com csdn 博客园 复习Node.js笔记的创建印象笔记 ​ 1-Node.js ​ day01 ​ 所讲知识点的笔记（ 现成的 ） ​ 疑难问题的笔记 今日作业： 复习二阶段所学node.js知识点，并将其整理为md笔记 安装nvm 安装nodemon 自行选取某一个小说或是图片型网站，爬取对应的图片","excerpt":"三阶段介绍重点： 1. 纪律 2. 笔记 3. 做一个主动的人 4. 阶段内容 学习目录的创建 1 2 3 4 5 6 7 8 9 三阶段 老师参考资料 1-Node.js 2-Vue.js 3-React.js 自己的 1-Node.js day01 day02 前端软件的安装 ​ Typora md文件的编辑器（ 安装没有要求 ） / 有道云 / 印象笔记 ​ git bash ​ Vs code 账号的注册 1. 码云 2. github.com 3. csdn 4. 博客园 复习Node.js"}]