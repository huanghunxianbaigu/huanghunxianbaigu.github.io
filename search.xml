<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[面试技巧]]></title>
    <url>%2F2019%2F06%2F21%2F%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[今天就到这吧，你回去等通知吧？ 面试官是这样的，我今天来到这里很不容易，路途也挺遥远的，我知道我可能不太符合岗位的要求。 我想知道我刚才说的问题哪里有不对的地方，知识点哪里有不对的地方。 我想向您请教一下，如果今天能跟您学习，也是我的幸运， 我虽然可能拿不到 Offer ，我也觉得今天的面试没有浪费时间，而且还向您学到了知识。 你愿意和什么样的领导共事？ 我希望我的领导在日常生活中对我的工作能有一些指导。 当我工作遇到问题的时候。能够及时的提醒我（ 少对领导提要求，多看看自己 ） 你的职业规划是什么？ 我希望我能学到更多的技术 我希望在一到三年我能从初中级软件开发工程师向高级软件开发工程师 接下来一到二年内从高级软件开发工程师向架构师转变 争取向技术总监开始转变]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[细数那些npm报过的错]]></title>
    <url>%2F2019%2F06%2F21%2F%E7%BB%86%E6%95%B0%E9%82%A3%E4%BA%9BNPM%E6%8A%A5%E8%BF%87%E7%9A%84%E9%94%99%2F</url>
    <content type="text"></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vue 框架级请求]]></title>
    <url>%2F2019%2F06%2F21%2FVue%E6%A1%86%E6%9E%B6%E7%BA%A7%E8%AF%B7%E6%B1%82%2F</url>
    <content type="text"><![CDATA[Vue 框架级请求vue-resource（停止更新） vue-resource作者推荐使用axios vue-resource在用法上和axios 相似度90+ vue2.0使用的基本上都是fetch / axios vue-resource 是有 jsonp 的 vue-resource 如果在vue中使用，是挂载当前的实例（ 组件 ）的 $http 属性身上的 this.$http( options ) this.$htttp.get( ) this.$http.post( ) axios（第三方库） axios 是没有 jsonp 数据请求类型的 axios 是promise（ 异步 ） axios 会对请求的结果进行再一次封装（ 提高安全性 ） 案例： 123456&lt;div id="app"&gt; &lt;button @click = "getData"&gt; get - mock - json &lt;/button&gt; &lt;button @click = "get_be_data"&gt; get - backend online- api &lt;/button&gt; &lt;button @click = "get_myself_php_data"&gt; get - myself - php -api &lt;/button&gt; &lt;button @click = "postData"&gt; post &lt;/button&gt;&lt;/div&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960new Vue(&#123; el: '#app', methods: &#123; getData () &#123; //进行get请求 // axios.get() -- $.get() // axios.post() ---$.post() // axios(options) -- $.ajax(options) // var p = axios(&#123; // url: './data/data.json' // &#125;) // console.log( p ) Promise对象 axios(&#123; url: './data/data.json', method: 'get',//默认就是get请求 &#125;) .then( res =&gt; console.log( res )) .catch( error =&gt; conosle.log( error )) &#125;, postData () &#123; // 进行post请求 &#125;, get_myself_php_data () &#123; axios(&#123; url: 'http://localhost/get.php', params: &#123; a: 1, b: 2 &#125; &#125;) .then( res =&gt; console.log( res )) .catch( error =&gt; console.log( error )) &#125;, get_be_data () &#123; // 跨域请求线上数据 - 卖座网 axios(&#123; url: 'https://m.maizuo.com/gateway', headers: &#123; 'X-Client-Info': '&#123;"a":"3000","ch":"1002","v":"5.0.4","e":"154549400038873748996477"&#125;', 'X-Host': 'mall.film-ticket.film.list' &#125;, params: &#123; cityId: 330100, pageNum: 1, pageSize: 10, type: 1, k: 7675918 &#125; &#125;) .then( res =&gt; console.log( res )) .catch( error =&gt; console.log( error )) &#125; &#125;&#125;) fetch ( javascript 原生提供 ) fetch 要手动进行一次数据格式化，但是 axios 是内部惊醒了数据的格式化 fetch get 方法请求数据，参数要直接连接在 url 上 fetch 格式化数据 有三种处理方法 .json( ) 格式化 json 类型数据， 将 json 类型 string 转换成 json 对象 .text( ) 格式化文本 .blob( ) 格式化二进制数据 fetch 如果按照官网文档书写post请求， 有坑 ， 携带数据出现问题 fetch post处理 设置请求头 通过 new URLSearchPrams 来携带参数]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue框架级请求</tag>
      </tags>
  </entry>
</search>
